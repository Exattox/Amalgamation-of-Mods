INFO - [♥] Lovely 0.7.1
INFO - [♥] Game directory is at "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Balatro"
INFO - [♥] Writing logs to "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\lovely\\log"
INFO - [♥] Using mod directory at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods"
INFO - [♥] Found .lovelyignore in 'Balatro-Draft-main', skipping it.
INFO - [♥] Found .lovelyignore in 'BalatroBeyond-main', skipping it.
INFO - [♥] Found .lovelyignore in 'Extreme Deck', skipping it.
INFO - [♥] Found .lovelyignore in 'FemtoLabsCollection-master', skipping it.
INFO - [♥] Found .lovelyignore in 'GARBSHIT-main', skipping it.
INFO - [♥] Found .lovelyignore in 'SDM_0-s-Stuff-main', skipping it.
INFO - [♥] Found .lovelyignore in 'TOGAPackBalatro-main', skipping it.
INFO - [♥] Found .lovelyignore in 'TooManyDecks-main', skipping it.
WARN - [♥] Unknown key `patches.21.?.match_indent` found in patch file at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\Cryptid-main\\lovely\\code.toml", ignoring it
WARN - [♥] Unknown key `patches.18.?.overwrite` found in patch file at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\HandyBalatro-main\\lovely.toml", ignoring it
WARN - [♥] Unknown key `patches.49.?.match_indent` found in patch file at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\Talisman\\lovely.toml", ignoring it
WARN - [♥] Unknown key `patches.52.?.match_indent` found in patch file at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\Talisman\\lovely.toml", ignoring it
INFO - [♥] Cleaning up dumps directory at "C:\\Users\\erikk\\AppData\\Roaming\\Balatro\\Mods\\lovely\\dump"
INFO - [♥] Initialization complete in 87ms
INFO - [♥] Applied 1 patch to 'conf.lua'
WARN - [♥] Pattern 'G.ARGS.score_intensity.organ = G.video_organ or G.ARGS.score_intensity.required_score > 0 and math.max(math.min(0.4, 0.1*math.log(G.ARGS.score_intensity.earned_score/(G.ARGS.score_intensity.required_score+1), 5)),0.) or 0' on target 'main.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if type(G.GAME.current_round.current_hand.chips) ~= \'number\' or type(G.GAME.current_round.current_hand.mult) ~= \'number\' then' on target 'main.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
INFO - [♥] Applied 36 patches to 'main.lua'
INFO - [♥] Applied 2 patches to 'engine/string_packer.lua'
INFO - [♥] Applied 19 patches to 'engine/controller.lua'
INFO - [♥] Applied 18 patches to 'back.lua'
WARN - [♥] Pattern 'local tag_sprite = Sprite(0,0,_size*1,_size*1,G.ASSET_ATLAS[(not self.hide_ability) and G.P_TAGS[self.key].atlas or \"tags\"], (self.hide_ability) and G.tag_undiscovered.pos or self.pos)' on target 'tag.lua' for pattern patch from Cryptid-main\lovely\cat.toml resulted in no matches
INFO - [♥] Applied 20 patches to 'tag.lua'
INFO - [♥] Applied 1 patch to 'engine/event.lua'
INFO - [♥] Applied 2 patches to 'engine/node.lua'
INFO - [♥] Applied 3 patches to 'engine/moveable.lua'
INFO - [♥] Applied 3 patches to 'engine/sprite.lua'
INFO - [♥] Applied 2 patches to 'engine/animatedsprite.lua'
WARN - [♥] Pattern 'assembled_string = assembled_string..(type(subpart) == \'string\' and subpart or args.vars[tonumber(subpart[1])] or \'ERROR\')' on target 'functions/misc_functions.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
INFO - [♥] Applied 66 patches to 'functions/misc_functions.lua'
WARN - [♥] Pattern 'for i = 1, 2 do' on target 'game.lua' for pattern patch from Cryptid-main\lovely\stake.toml resulted in no matches
WARN - [♥] Pattern 'create_shop_card_ui(card, \'Voucher\', G.shop_vouchers)' on target 'game.lua' for pattern patch from Cryptid-main\lovely\stake.toml resulted in no matches
WARN - [♥] Pattern 'self.GAME.current_round.voucher = G.SETTINGS.tutorial_progress and G.SETTINGS.tutorial_progress.forced_voucher or SMODS.get_next_vouchers()' on target 'game.lua' for pattern patch from Cryptid-main\lovely\very_fair.toml resulted in no matches
WARN - [♥] Pattern 'Cryptid.profile_prefix = \"M\"' on target 'game.lua' for pattern patch from Entropy-main\lovely\game.toml resulted in no matches
WARN - [♥] Pattern 'self.GAME.current_round.voucher = G.SETTINGS.tutorial_progress and G.SETTINGS.tutorial_progress.forced_voucher or get_next_voucher_key()' on target 'game.lua' for pattern patch from Cryptid-main\lovely\Voucher.toml resulted in no matches
WARN - [♥] Regex 'card\\:start_materialize\\(\\)\\n\\s+G\\.shop_vouchers\\:emplace\\(card\\)\\n\\s+end' on target 'game.lua' for regex patch from Cryptid-main\lovely\Voucher.toml resulted in no matches
INFO - [♥] Applied 113 patches to 'game.lua'
INFO - [♥] Applied 2 patches to 'globals.lua'
INFO - [♥] Applied 7 patches to 'engine/ui.lua'
WARN - [♥] Pattern 'G.GAME.shop.joker_max*1.02*G.CARD_W,' on target 'functions/UI_definitions.lua' for pattern patch from Cryptid-main\lovely\equilibrium.toml resulted in no matches
WARN - [♥] Pattern 'local stake_sprite = get_stake_sprite(G.GAME.stake or 1, 0.4)\n    blind_text[#blind_text + 1] =' on target 'functions/UI_definitions.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\ui.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.T, config={text = G.GAME.hands[handname].chips, scale = 0.45, colour = G.C.UI.TEXT_LIGHT}},' on target 'functions/UI_definitions.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.T, config={text = G.GAME.hands[handname].mult, scale = 0.45, colour = G.C.UI.TEXT_LIGHT}}' on target 'functions/UI_definitions.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.O, config={object = DynaText({string = {{ref_table = G.GAME.round_resets, ref_value = \'ante\'}}, colours = {G.C.IMPORTANT},shadow = true, font = G.LANGUAGES[\'en-us\'].font, scale = 2*scale}),id = \'ante_UI_count\'}},' on target 'functions/UI_definitions.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
INFO - [♥] Applied 142 patches to 'functions/UI_definitions.lua'
WARN - [♥] Pattern 'ease_to = G.GAME.chips + math.floor(hand_chips * mult) * (e and e.antiscore and -1 or 1),' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\blind.toml resulted in no matches
WARN - [♥] Pattern 'if reps[j] ~= 1 then' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\misc.toml resulted in no matches
WARN - [♥] Pattern 'for i=1, #G.jokers.cards + #G.consumeables.cards do' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\misc.toml resulted in no matches
WARN - [♥] Pattern 'local effects = {[1] = {playing_card = G.hand.cards[i]:get_end_of_round_effect()}}' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\stake.toml resulted in no matches
WARN - [♥] Pattern 'G.GAME.current_round.voucher = get_next_voucher_key()' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\sticker.toml resulted in no matches
WARN - [♥] Pattern 'update_hand_text({delay = 0}, {chips = extras.hand_chips and hand_chips, mult = extras.mult and mult})' on target 'functions/state_events.lua' for pattern patch from Entropy-main\lovely\eqmult.toml resulted in no matches
WARN - [♥] Pattern 'G.GAME.current_round.voucher = get_next_voucher_key()' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\Voucher.toml resulted in no matches
WARN - [♥] Pattern 'if effects[ii].card then' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if effects.jokers.Xmult_mod then mult = mod_mult(mult*effects.jokers.Xmult_mod);extras.mult = true  end' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if effect.Xmult_mod then mult = mod_mult(mult*effect.Xmult_mod);extras.mult = true  end' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if effects[ii].message then' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern '--calculate the card edition effects' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if effects[ii].edition.p_dollars_mod then' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if edition_effects.jokers.x_mult_mod then' on target 'functions/state_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'if SMODS.has_enhancement(scoring_hand[i], \'m_glass\') and not scoring_hand[i].debuff and pseudorandom(\'glass\') < G.GAME.probabilities.normal/(scoring_hand[i].ability.name == \'Glass Card\' and scoring_hand[i].ability.extra or G.P_CENTERS.m_glass.config.extra) then' on target 'functions/state_events.lua' for pattern patch from Cryptid-main\lovely\Probability.toml resulted in no matches
WARN - [♥] Regex '(?<indent>[\\t ]*)if destroyed then \\n' on target 'functions/state_events.lua' for regex patch from Cryptid-main\lovely\seal.toml resulted in no matches
INFO - [♥] Applied 94 patches to 'functions/state_events.lua'
WARN - [♥] Pattern '{n=G.UIT.T, config={text = localize(\'$\')..config.dollars, scale = 1.2*scale, colour = G.C.WHITE, shadow = true, juice = true}}' on target 'functions/common_events.lua' for pattern patch from Cryptid-main\lovely\code.toml resulted in no matches
WARN - [♥] Pattern 'G.shop_jokers.T.w = G.GAME.shop.joker_max*1.01*G.CARD_W' on target 'functions/common_events.lua' for pattern patch from Cryptid-main\lovely\equilibrium.toml resulted in no matches
WARN - [♥] Pattern 'function generate_card_ui(_c, full_UI_table, specific_vars, card_type, badges, hide_desc, main_start, main_end)' on target 'functions/common_events.lua' for pattern patch from Cryptid-main\lovely\lib_misc.toml resulted in no matches
WARN - [♥] Pattern 'elseif v.boss.showdown and (G.GAME.round_resets.ante)%G.GAME.win_ante == 0 and G.GAME.round_resets.ante >= 2 then' on target 'functions/common_events.lua' for pattern patch from Cryptid-main\lovely\stake.toml resulted in no matches
WARN - [♥] Pattern '(self.ability.set == \'Voucher\' and {G.C.SECONDARY_SET.Voucher, G.C.CLEAR}) or ' on target 'functions/common_events.lua' for pattern patch from Entropy-main\lovely\dissolve_colours.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.O, config={object = DynaText({string = {\' \'..localize(\'ph_mr_bones\')..\' \'}, colours = {G.C.FILTER}, shadow = true, pop_in = 0, scale = 0.5*scale, silent = true})}}' on target 'functions/common_events.lua' for pattern patch from Entropy-main\lovely\never_lose.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.O, config={object = DynaText({string = {localize(\'$\')..num_dollars}, colours = {G.C.MONEY}, shadow = true, pop_in = 0, scale = 0.65, float = true})}}' on target 'functions/common_events.lua' for pattern patch from Entropy-main\lovely\rcode.toml resulted in no matches
WARN - [♥] Pattern '{n=G.UIT.O, config={object = DynaText({string = {localize(\'$\')..num_dollars}, colours = {G.C.RED}, shadow = true, pop_in = 0, scale = 0.65, float = true})}}' on target 'functions/common_events.lua' for pattern patch from Entropy-main\lovely\rcode.toml resulted in no matches
WARN - [♥] Regex 'localize\\(\'ph_mr_bones\'\\)..\' \'\\}, colours = \\{G.C.FILTER' on target 'functions/common_events.lua' for regex patch from Cryptid-main\lovely\code.toml resulted in no matches
WARN - [♥] Pattern 'if not v.config.softlock then\n    softlocked = softlocked' on target 'functions/common_events.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\planets.toml resulted in no matches
WARN - [♥] Pattern '                    if (not v.config.softlock or G.GAME.hands[v.config.hand_type].played > 0) then\n                        add = true\n                    end' on target 'functions/common_events.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\planets.toml resulted in no matches
WARN - [♥] Pattern '                    if (not v.config.softlock or G.GAME.hands[v.config.hand_type].played > 0) then\n                        add = true\n                    end' on target 'functions/common_events.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\planets.toml resulted in no matches
WARN - [♥] Pattern 'if num_dollars > 60 then' on target 'functions/common_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'func = (function() if eval_func(card) then if not first or first then card:juice_up(0.1, 0.1) end;juice_card_until(card, eval_func, nil, 0.8) end return true end)' on target 'functions/common_events.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
INFO - [♥] Applied 201 patches to 'functions/common_events.lua'
WARN - [♥] Pattern '    if #G.hand.highlighted <= 0 or G.GAME.blind.block_play or #G.hand.highlighted > 5 then ' on target 'functions/button_callbacks.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\selectionlimit.toml resulted in no matches
WARN - [♥] Pattern 'if ((G.GAME.dollars-G.GAME.bankrupt_at) - 10 >= 0) and' on target 'functions/button_callbacks.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Regex '(?<indent>[\\t ]*)voucher_pool\\[i\\+\\(j-1\\)\\*4 \\+ \\(8\\*\\(args\\.cycle_config\\.current_option - 1\\)\\)\\]\\n[\\s\\S]{6}if not center then break end\\n[\\s\\S]{6}local card = Card\\(G\\.your_collection\\[j\\]\\.T\\.x \\+ G\\.your_collection\\[j\\]\\.T\\.w\\/2, G\\.your_collection\\[j\\]\\.T\\.y, G\\.CARD_W, G\\.CARD_H, G\\.P_CARDS\\.empty, center\\)' on target 'functions/button_callbacks.lua' for regex patch from Flower-Pot-main\lovely\stat_type.toml resulted in no matches
INFO - [♥] Applied 79 patches to 'functions/button_callbacks.lua'
WARN - [♥] Pattern '*then G.E_MANAGER:add_event(Event({ func = function() G.GAME.blind:set_blind(nil, true, nil); return true end })) end' on target 'card.lua' for pattern patch from smods-main\lovely\calculate_card_added.toml resulted in 2 matches, wanted 1
WARN - [♥] Ignoring excess matches
WARN - [♥] Pattern 'if not initial then G.GAME.blind:debuff_card(self) end' on target 'card.lua' for pattern patch from Cryptid-main\lovely\lib_misc.toml resulted in no matches
WARN - [♥] Pattern 'if self.ability.name == \'Campfire\' and G.GAME.blind.boss and not (G.GAME.blind.config and G.GAME.blind.config.bonus) and self.ability.x_mult > 1 then' on target 'card.lua' for pattern patch from Cryptid-main\lovely\misc.toml resulted in no matches
WARN - [♥] Pattern 'if self.ability.name:find(\'Arcana\') then' on target 'card.lua' for pattern patch from Cryptid-main\lovely\misprint.toml resulted in no matches
WARN - [♥] Pattern 'if self.ability.name == \'The Hermit\' or self.ability.consumeable.hand_type or self.ability.name == \'Temperance\' or self.ability.name == \'Black Hole\' then' on target 'card.lua' for pattern patch from Cryptid-main\lovely\stake.toml resulted in no matches
WARN - [♥] Pattern 'if self.ability.queue_negative_removal then' on target 'card.lua' for pattern patch from Cryptid-main\lovely\sticker.toml resulted in no matches
WARN - [♥] Pattern '    return generate_card_ui(self.config.center, nil, loc_vars, card_type, badges, hide_desc, main_start, main_end)' on target 'card.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\localization.toml resulted in no matches
WARN - [♥] Pattern 'G.GAME.current_round.voucher = nil' on target 'card.lua' for pattern patch from Cryptid-main\lovely\Voucher.toml resulted in no matches
WARN - [♥] Pattern 'if G.GAME.blind then G.E_MANAGER:add_event(Event({ func = function() G.GAME.blind:set_blind(nil, true, nil); return true end })) end' on target 'card.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'x_mult = center.config.Xmult or 1,' on target 'card.lua' for pattern patch from Talisman\lovely.toml resulted in no matches
WARN - [♥] Pattern 'elseif self.ability.name == \'Business Card\' then loc_vars = {\'\'..(G.GAME and G.GAME.probabilities.normal or 1), self.ability.extra}' on target 'card.lua' for pattern patch from Cryptid-main\lovely\Probability.toml resulted in no matches
WARN - [♥] Pattern 'pseudorandom(\'business\') < G.GAME.probabilities.normal/self.ability.extra then' on target 'card.lua' for pattern patch from Cryptid-main\lovely\Probability.toml resulted in no matches
WARN - [♥] Pattern 'local currentBack = self.params.viewed_back and G.GAME.viewed_back or G.GAME.selected_back' on target 'card.lua' for pattern patch from Galdur-master\lovely.toml resulted in no matches
INFO - [♥] Applied 283 patches to 'card.lua'
WARN - [♥] Pattern 'if card.edition.card_limit == -1 and #G.hand.cards < G.hand.config.card_limit then' on target 'cardarea.lua' for pattern patch from Entropy-main\lovely\hsize_mult.toml resulted in no matches
WARN - [♥] Pattern '    self.config.highlighted_limit = config.highlight_limit or 5' on target 'cardarea.lua' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\selectionlimit.toml resulted in no matches
INFO - [♥] Applied 25 patches to 'cardarea.lua'
WARN - [♥] Pattern 'self.chips = get_blind_amount(G.GAME.round_resets.ante)*self.mult*G.GAME.starting_params.ante_scaling' on target 'blind.lua' for pattern patch from Entropy-main\lovely\game.toml resulted in no matches
WARN - [♥] Pattern 'self.chips = get_blind_amount(G.GAME.round_resets.ante)*self.mult*G.GAME.starting_params.ante_scaling' on target 'blind.lua' for pattern patch from Entropy-main\lovely\game.toml resulted in no matches
INFO - [♥] Applied 43 patches to 'blind.lua'
INFO - [♥] Applied 3 patches to 'card_character.lua'
INFO - [♥] Applied 5 patches to 'engine/text.lua'
INFO - [♥] Applied 1 patch to '=[SMODS _ "src/ui.lua"]'
INFO - [♥] Applied 3 patches to '=[SMODS _ "src/utils.lua"]'
INFO - [♥] Applied 7 patches to '=[SMODS _ "src/overrides.lua"]'
INFO - [♥] Applied 3 patches to '=[SMODS _ "src/game_object.lua"]'
INFO - [G] Failed to connect to the debug server
INFO - [G] 2025-05-03 14:38:54 :: DEBUG :: DebugConsole :: Steamodded Debug Socket started !
INFO - [G] 2025-05-03 14:38:54 :: INFO  :: SMODS :: Steamodded v1.0.0~BETA-0427a
INFO - [♥] Applied 9 patches to 'engine/sound_manager.lua'
INFO - [♥] Applied 3 patches to 'engine/save_manager.lua'
INFO - [♥] Applied 2 patches to 'engine/string_packer.lua'
INFO - [♥] Applied 4 patches to '=[SMODS _ "src/card_draw.lua"]'
INFO - [G] 2025-05-03 14:38:56 :: ERROR :: Loader :: Found invalid metadata JSON file at C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/.luarc.json, ignoring: [SMODS _ "src/loader.lua"]:226: id
INFO - [G] 2025-05-03 14:38:56 :: ERROR :: Loader :: Found invalid metadata JSON file at C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/.vscode/settings.json, ignoring: [SMODS _ "src/loader.lua"]:226: id
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Processing Mod file (Legacy header): main.lua
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Loader :: Duplicate Mod ID: bb
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: ERROR :: Loader :: Found invalid metadata JSON file at C:\Users\erikk\AppData\Roaming\Balatro\Mods/Entropy-main/.vscode/settings.json, ignoring: [SMODS _ "src/loader.lua"]:226: id
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Processing Mod file (Legacy header): steamodded.lua
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Loader :: Duplicate Mod ID: Handy
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Processing Mod file (Legacy header): main.lua
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Saving Mod Info: sdm0sstuff
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Processing Mod file (Legacy header): steamodded_metadata.lua
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Saving Mod Info: Talisman
INFO - [G] 2025-05-03 14:38:56 :: ERROR :: Loader :: Found invalid metadata JSON file at C:\Users\erikk\AppData\Roaming\Balatro\Mods/TooManyDecks-main/.vscode/settings.json, ignoring: [SMODS _ "src/loader.lua"]:226: id
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Loader :: Valid JSON file found
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod bb was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod ExtremeDecks was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod GARBPACK was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod TOGAPack was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod sdm0sstuff was unable to load: 
INFO - [G] [CRYPTID] Loading library file ascended.lua
INFO - [G] [CRYPTID] Loading library file calculate.lua
INFO - [G] [CRYPTID] Loading library file content.lua
WARN - [♥] Pattern 'bogus patch lol aikoyori was here no patching ' on target '=[SMODS Cryptid "lib/content.lua"]' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\compat.cryptid.toml resulted in no matches
INFO - [♥] Applied 0 patches to '=[SMODS Cryptid "lib/content.lua"]'
INFO - [G] [CRYPTID] Loading library file cross-mod.lua
INFO - [G] [CRYPTID] Loading library file d20.lua
INFO - [G] [CRYPTID] Loading library file event.lua
INFO - [G] [CRYPTID] Loading library file gameset.lua
INFO - [G] [CRYPTID] Loading library file https.lua
INFO - [G] 2025-05-03 14:38:56 :: DEBUG :: SMODS.https :: Using https module backend
INFO - [G] [CRYPTID] Loading library file misc.lua
INFO - [G] [CRYPTID] Loading library file misprintize.lua
INFO - [G] [CRYPTID] Loading library file modifiers.lua
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Sticker :: Detected duplicate register call on object perishable
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Sticker :: Detected duplicate register call on object pinned
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Sticker :: Detected duplicate register call on object eternal
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Sticker :: Detected duplicate register call on object rental
INFO - [G] [CRYPTID] Loading library file notifications.lua
INFO - [G] [CRYPTID] Loading library file overrides.lua
INFO - [G] [CRYPTID] Loading library file pointerlib.lua
INFO - [G] [CRYPTID] Loading library file ui.lua
INFO - [G] [CRYPTID] Loading file achievement.lua
INFO - [G] [CRYPTID] Loading file blind.lua
INFO - [G] [CRYPTID] Loading file challenge.lua
INFO - [G] [CRYPTID] Loading file code.lua
INFO - [G] [CRYPTID] Loading file deck.lua
INFO - [G] [CRYPTID] Loading file enhanced.lua
INFO - [G] [CRYPTID] Loading file epic.lua
INFO - [G] [CRYPTID] Loading file exotic.lua
INFO - [G] [CRYPTID] Loading file joker_display.lua
INFO - [G] [CRYPTID] Loading file m.lua
INFO - [G] [CRYPTID] Loading file misc.lua
INFO - [G] [CRYPTID] Loading file misc_joker.lua
INFO - [G] [CRYPTID] Loading file planet.lua
INFO - [G] [CRYPTID] Loading file pointer.lua
INFO - [G] [CRYPTID] Inserting Pointer Aliases
INFO - [G] [CRYPTID] Loading file sleeve.lua
INFO - [G] [CRYPTID] Loading file spectral.lua
INFO - [G] [CRYPTID] Loading file spooky.lua
INFO - [G] [CRYPTID] Loading file stake.lua
INFO - [♥] Applied 1 patch to '=[SMODS Cryptid "items/stake.lua"]'
INFO - [G] [CRYPTID] Loading file tag.lua
INFO - [G] [CRYPTID] Loading file test.lua
INFO - [G] [CRYPTID] Loading file voucher.lua
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Atlas :: Object cry_effarcire has the same key as an existing object, not registering.
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Atlas :: If you want to modify an existing object, use take_ownership()
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod SGTMD was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod FemtoLabsCollection was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Draw Step :: Detected duplicate register call on object floating_sprite
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Draw Step :: Detected duplicate register call on object front
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: Aikoyori's Shenanigans :: Cryptid Detected... vro ;P
INFO - [G] 2025-05-03 14:38:56 :: TRACE :: Loader :: Mod draft was unable to load: 
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Sticker :: Detected duplicate register call on object cry_rigged
WARN - [♥] Pattern 'aikoyori was here' on target '=[SMODS entr "items/misc/seals.lua"]' for pattern patch from Balatro-Aikoyoris-Shenanigans-main\lovely\compat.entr.toml resulted in no matches
INFO - [♥] Applied 0 patches to '=[SMODS entr "items/misc/seals.lua"]'
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: Atlas :: Detected duplicate register call on object entr_modicon
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: CBlind :: Object c_entr_bl_eye has the same key as an existing object, not registering.
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: CBlind :: If you want to modify an existing object, use take_ownership()
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: CBlind :: Object c_entr_bl_wheel has the same key as an existing object, not registering.
INFO - [G] 2025-05-03 14:38:56 :: WARN  :: CBlind :: If you want to modify an existing object, use take_ownership()
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: TIMER :: [0000] Injected Language in 0.001 ms
INFO - [G] 2025-05-03 14:38:56 :: INFO  :: TIMER :: [0000] Injected [INTERNAL] in 1.608 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0076] Injected Atlas in 2548.374 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0046] Injected Sound in 47.265 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0034] Injected Stake in 1.050 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0011] Injected Rarity in 0.064 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0016] Injected ObjectType in 0.184 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0736] Injected Center in 6.073 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0009] Injected Undiscovered Sprite in 0.022 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0064] Injected Blind in 0.219 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0013] Injected Seal in 0.338 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0005] Injected Suit in 0.118 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0014] Injected Rank in 0.134 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0029] Injected DeckSkin in 0.289 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0048] Injected PokerHand in 2.627 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0033] Injected Challenge in 0.113 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0069] Injected Tag in 0.156 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0016] Injected Sticker in 0.274 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0017] Injected Shader in 266.839 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0002] Injected Keybind in 0.022 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0022] Injected Achievement in 0.150 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0007] Injected nil in 0.034 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0024] Injected Draw Step in 0.074 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0000] Injected [INTERNAL] in 18.366 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0010] Injected Other in 0.027 ms
INFO - [G] 2025-05-03 14:38:59 :: INFO  :: TIMER :: [0001] Injected nil in 2.574 ms
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:39:08 :: DEBUG :: SMODS.https(1) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:40:08 :: DEBUG :: SMODS.https(2) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:41:08 :: DEBUG :: SMODS.https(3) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:42:08 :: DEBUG :: SMODS.https(4) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:43:10 :: DEBUG :: SMODS.https(5) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:44:11 :: DEBUG :: SMODS.https(6) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:45:13 :: DEBUG :: SMODS.https(7) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:46:13 :: DEBUG :: SMODS.https(8) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:47:13 :: DEBUG :: SMODS.https(9) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:48:14 :: DEBUG :: SMODS.https(10) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:49:18 :: DEBUG :: SMODS.https(11) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:50:18 :: DEBUG :: SMODS.https(12) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:51:18 :: DEBUG :: SMODS.https(13) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:52:19 :: DEBUG :: SMODS.https(14) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:53:21 :: DEBUG :: SMODS.https(15) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:54:22 :: DEBUG :: SMODS.https(16) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:55:22 :: DEBUG :: SMODS.https(17) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:56:22 :: DEBUG :: SMODS.https(18) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:57:22 :: DEBUG :: SMODS.https(19) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:58:22 :: DEBUG :: SMODS.https(20) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 14:59:23 :: DEBUG :: SMODS.https(21) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:00:23 :: DEBUG :: SMODS.https(22) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:01:23 :: DEBUG :: SMODS.https(23) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:02:27 :: DEBUG :: SMODS.https(24) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:03:27 :: DEBUG :: SMODS.https(25) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:04:28 :: DEBUG :: SMODS.https(26) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:05:31 :: DEBUG :: SMODS.https(27) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:06:32 :: DEBUG :: SMODS.https(28) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:07:32 :: DEBUG :: SMODS.https(29) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:08:32 :: DEBUG :: SMODS.https(30) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:09:33 :: DEBUG :: SMODS.https(31) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:10:33 :: DEBUG :: SMODS.https(32) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:11:34 :: DEBUG :: SMODS.https(33) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:12:34 :: DEBUG :: SMODS.https(34) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:13:35 :: DEBUG :: SMODS.https(35) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:14:35 :: DEBUG :: SMODS.https(36) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:15:36 :: DEBUG :: SMODS.https(37) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:16:36 :: DEBUG :: SMODS.https(38) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:17:36 :: DEBUG :: SMODS.https(39) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:18:37 :: DEBUG :: SMODS.https(40) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:19:38 :: DEBUG :: SMODS.https(41) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:20:39 :: DEBUG :: SMODS.https(42) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:21:40 :: DEBUG :: SMODS.https(43) :: Using https module backend
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:22:41 :: DEBUG :: SMODS.https(44) :: Using https module backend
INFO - [G] Could not find key for center: {
  refresh_movement= "true",
}
INFO - [G] Could not find key for center: {
  refresh_movement= "true",
}
INFO - [G] Could not find key for center: {
  refresh_movement= "true",
  h_popup= table: 0x4f59e760   {
     nodes= table: 0x4f59e850      {
        [1] = table: 0x4f59e890         {
           nodes= table: 0x43a443d0,
           n= 3,
           config= table: 0x4f59e920,
         },
      },
     n= 7,
     config= table: 0x4f59e7f0      {
        colour= table: 0x3a4a2268         {
           [1] = 0,
           [2] = 0,
           [3] = 0,
           [4] = 0,
         },
        align= "cm",
        outline_colour= table: 0x3a437cb8         {
           [1] = 0.84705882352941,
           [2] = 0.84705882352941,
           [3] = 0.84705882352941,
           [4] = 1,
         },
      },
   },
  h_popup_config= table: 0x3f7e17b8   {
     offset= table: 0x3f7e1848      {
        y= 0,
        x= -0.1,
      },
     align= "cl",
     instance_type= "POPUP",
     parent= table: 0x434544e0      {
        float= "true",
        click_offset= table: 0x43454888         {
           y= 0,
           x= 0,
         },
        children= table: 0x43454d60         {
         },
        parent= table: 0x3d606230         {
           click_offset= table: 0x404f9378,
           children= table: 0x3d606258,
           parent= table: 0x3d606090,
           T= table: 0x404f9100,
           offset= table: 0x404fa078,
           role= table: 0x404fa2e8,
           last_aligned= -1,
           content_dimensions= table: 0x3d606370,
           Mid= table: 0x3d606230,
           VT= table: 0x404f9b98,
           shadow_parrallax= table: 0x404fa0d8,
           ARGS= table: 0x3d606348,
           ID= 451132,
           container= table: 0x4eb18e70,
           config= table: 0x43455fe8,
           velocity= table: 0x404f9c88,
           temp_offs= table: 0x45ac8b70,
           UIT= 5,
           alignment= table: 0x404f9ec8,
           created_on_pause= "true",
           STATIONARY= "true",
           NEW_ALIGNMENT= "false",
           CALCING= "true",
           under_overlay= "false",
           layered_parallax= table: 0x404fa138,
           FRAME= table: 0x404f9438,
           UIBox= table: 0x3ebcbac0,
           shadow_height= 0.2,
           hover_offset= table: 0x404f93d8,
           CT= table: 0x404f9100,
           RETS= table: 0x404f90d8,
           states= table: 0x404f9498,
           original_T= table: 0x404f9a08,
           pinch= table: 0x404fa018,
           last_moved= -1,
           static_rotation= "true",
         },
        sprite_pos= table: 0x43454458         {
           y= 0,
           x= 0,
         },
        T= table: 0x434546d0         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 1,
           r= 0,
         },
        offset= table: 0x434555f8         {
           y= 0,
           x= 0,
         },
        role= table: 0x404fa4c8         {
           xy_bond= "Strong",
           offset= table: 0x43455148,
           scale_bond= "Weak",
           major= table: 0x3d606230,
           draw_major= table: 0x434544e0,
           wh_bond= "Weak",
           r_bond= "Strong",
           role_type= "Minor",
         },
        last_aligned= -1,
        Mid= table: 0x434544e0         {
           float= "true",
           click_offset= table: 0x43454888,
           children= table: 0x43454d60,
           parent= table: 0x3d606230,
           sprite_pos= table: 0x43454458,
           T= table: 0x434546d0,
           offset= table: 0x434555f8,
           role= table: 0x404fa4c8,
           last_aligned= -1,
           Mid= table: 0x434544e0,
           ability_UIBox_table= table: 0x4c2ff4a8,
           hover_tilt= 3,
           original_T= table: 0x43454d88,
           shadow_parrallax= table: 0x43455658,
           ARGS= table: 0x434545b8,
           ID= 451056,
           atlas= table: 0x3b20e490,
           config= table: 0x43454640,
           velocity= table: 0x43454f68,
           scale= table: 0x43455718,
           temp_offs= table: 0x460d2698,
           alignment= table: 0x434554b0,
           hovering= "true",
           under_overlay= "false",
           draw_steps= table: 0x434561d8,
           CALCING= "true",
           CT= table: 0x43454e78,
           STATIONARY= "false",
           NEW_ALIGNMENT= "false",
           sprite_pos_copy= table: 0x43455778,
           hover= "function: 0x43456270",
           RETS= table: 0x43454618,
           zoom= "true",
           stop_hover= "function: 0x434562f8",
           sprite= "Quad: 0x018a0f314a20",
           juice= table: 0x4c2ff328,
           container= table: 0x4eb18e70,
           layered_parallax= table: 0x434556b8,
           FRAME= table: 0x43454a98,
           created_on_pause= "true",
           shadow_height= 0.2,
           image_dims= table: 0x43455e10,
           states= table: 0x43454af8,
           VT= table: 0x43454e78,
           scale_mag= 40,
           hover_offset= table: 0x434548b0,
           pinch= table: 0x43455598,
           static_rotation= "false",
           last_moved= -1,
         },
        ability_UIBox_table= table: 0x4c2ff4a8         {
           badges= table: 0x4c2ff5b0,
           info= table: 0x4c2ff560,
           main= table: 0x4c2ff538,
           card_type= "Other",
           name= table: 0x4c2ffb58,
           type= table: 0x4c2ff588,
         },
        hover_tilt= 3,
        original_T= table: 0x43454d88         {
           x= 0,
           w= 0.8,
           y= 0,
           h= 0.8,
           r= 0,
           scale= 1,
         },
        shadow_parrallax= table: 0x43455658         {
           y= -1.5,
           x= -0.6345,
         },
        ARGS= table: 0x434545b8         {
           prep_shader= table: 0x4f9d3b28,
           collides_with_point_rotation= table: 0x4486df28,
           collides_with_point_translation= table: 0x4486df00,
           set_offset_translation= table: 0x40eaa1e0,
           set_offset_point= table: 0x40eaa0f0,
           collides_with_point_point= table: 0x4486ded8,
         },
        ID= 451056,
        atlas= table: 0x3b20e490         {
           name= "akyrs_modicon",
           prefix_config= table: 0x3b20e4b8,
           key= "akyrs_modicon",
           original_mod= table: 0x3acdea30,
           _saved_d_u= "true",
           original_key= "modicon",
           px= 32,
           image_data= "ImageData: 0x018a13f207b0",
           mod= table: 0x3acdea30,
           image= "Image: 0x018a21788bd0",
           registered= "true",
           py= 32,
           path= "aikoyoriModIcon.png",
           atlas= "Atlas",
           full_path= "C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/assets/2x/aikoyoriModIcon.png",
         },
        config= table: 0x43454640         {
           refresh_movement= "true",
           h_popup= table: 0x4f59e760,
           h_popup_config= table: 0x3f7e17b8,
         },
        velocity= table: 0x43454f68         {
           x= 0,
           mag= 0,
           y= 0,
           r= 0,
           scale= -0.0030493076174419,
         },
        scale= table: 0x43455718         {
           y= 32,
           x= 32,
         },
        temp_offs= table: 0x460d2698         {
           y= 29.6565,
           x= 45.37,
         },
        alignment= table: 0x434554b0         {
           prev_type= "a",
           offset= table: 0x434554d8,
           type= "a",
           type_list= table: 0x45ac8e50,
           prev_offset= table: 0x43455538,
         },
        hovering= "true",
        under_overlay= "false",
        draw_steps= table: 0x434561d8         {
           [1] = table: 0x43456200,
           [2] = table: 0x43456248,
         },
        CALCING= "true",
        CT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        STATIONARY= "false",
        NEW_ALIGNMENT= "false",
        sprite_pos_copy= table: 0x43455778         {
           y= 0,
           x= 0,
         },
        hover= "function: 0x43456270",
        RETS= table: 0x43454618         {
           get_pos_pixel= table: 0x49287068,
         },
        zoom= "true",
        stop_hover= "function: 0x434562f8",
        sprite= "Quad: 0x018a0f314a20",
        juice= table: 0x4c2ff328         {
           start_time= 23.215424911356,
           scale= 0,
           r_amt= 0.02,
           r= 0,
           end_time= 23.615424911356,
           scale_amt= 0.05,
         },
        container= table: 0x4eb18e70         {
           jiggle= 0,
           click_offset= table: 0x4eb19500,
           under_overlay= "false",
           children= table: 0x4eb19b28,
           FRAME= table: 0x4eb18f10,
           ARGS= table: 0x4eb18e98,
           hover_offset= table: 0x4eb19528,
           T= table: 0x4eb19188,
           CT= table: 0x4eb19188,
           RETS= table: 0x4eb18ec0,
           ID= 450652,
           states= table: 0x4eb19120,
           created_on_pause= "false",
           container= table: 0x4eb18e70,
           config= table: 0x4eb18ee8,
         },
        layered_parallax= table: 0x434556b8         {
           y= 0,
           x= 0,
         },
        FRAME= table: 0x43454a98         {
           MOVE= 178300,
           DRAW= -1,
         },
        created_on_pause= "true",
        shadow_height= 0.2,
        image_dims= table: 0x43455e10         {
           [1] = 34,
           [2] = 34,
         },
        states= table: 0x43454af8         {
           drag= table: 0x43454ca0,
           collide= table: 0x43454b20,
           release_on= table: 0x43454d00,
           visible= "true",
           hover= table: 0x43454be0,
           click= table: 0x43454c40,
           focus= table: 0x43454b80,
         },
        VT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        scale_mag= 40,
        hover_offset= table: 0x434548b0         {
           y= 0.46711111111111,
           x= 0.04333333333333,
         },
        pinch= table: 0x43455598         {
           y= "false",
           x= "false",
         },
        static_rotation= "false",
        last_moved= -1,
      },
     major= table: 0x434544e0      {
        float= "true",
        click_offset= table: 0x43454888         {
           y= 0,
           x= 0,
         },
        children= table: 0x43454d60         {
         },
        parent= table: 0x3d606230         {
           click_offset= table: 0x404f9378,
           children= table: 0x3d606258,
           parent= table: 0x3d606090,
           T= table: 0x404f9100,
           offset= table: 0x404fa078,
           role= table: 0x404fa2e8,
           last_aligned= -1,
           content_dimensions= table: 0x3d606370,
           Mid= table: 0x3d606230,
           VT= table: 0x404f9b98,
           shadow_parrallax= table: 0x404fa0d8,
           ARGS= table: 0x3d606348,
           ID= 451132,
           container= table: 0x4eb18e70,
           config= table: 0x43455fe8,
           velocity= table: 0x404f9c88,
           temp_offs= table: 0x45ac8b70,
           UIT= 5,
           alignment= table: 0x404f9ec8,
           created_on_pause= "true",
           STATIONARY= "true",
           NEW_ALIGNMENT= "false",
           CALCING= "true",
           under_overlay= "false",
           layered_parallax= table: 0x404fa138,
           FRAME= table: 0x404f9438,
           UIBox= table: 0x3ebcbac0,
           shadow_height= 0.2,
           hover_offset= table: 0x404f93d8,
           CT= table: 0x404f9100,
           RETS= table: 0x404f90d8,
           states= table: 0x404f9498,
           original_T= table: 0x404f9a08,
           pinch= table: 0x404fa018,
           last_moved= -1,
           static_rotation= "true",
         },
        sprite_pos= table: 0x43454458         {
           y= 0,
           x= 0,
         },
        T= table: 0x434546d0         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 1,
           r= 0,
         },
        offset= table: 0x434555f8         {
           y= 0,
           x= 0,
         },
        role= table: 0x404fa4c8         {
           xy_bond= "Strong",
           offset= table: 0x43455148,
           scale_bond= "Weak",
           major= table: 0x3d606230,
           draw_major= table: 0x434544e0,
           wh_bond= "Weak",
           r_bond= "Strong",
           role_type= "Minor",
         },
        last_aligned= -1,
        Mid= table: 0x434544e0         {
           float= "true",
           click_offset= table: 0x43454888,
           children= table: 0x43454d60,
           parent= table: 0x3d606230,
           sprite_pos= table: 0x43454458,
           T= table: 0x434546d0,
           offset= table: 0x434555f8,
           role= table: 0x404fa4c8,
           last_aligned= -1,
           Mid= table: 0x434544e0,
           ability_UIBox_table= table: 0x4c2ff4a8,
           hover_tilt= 3,
           original_T= table: 0x43454d88,
           shadow_parrallax= table: 0x43455658,
           ARGS= table: 0x434545b8,
           ID= 451056,
           atlas= table: 0x3b20e490,
           config= table: 0x43454640,
           velocity= table: 0x43454f68,
           scale= table: 0x43455718,
           temp_offs= table: 0x460d2698,
           alignment= table: 0x434554b0,
           hovering= "true",
           under_overlay= "false",
           draw_steps= table: 0x434561d8,
           CALCING= "true",
           CT= table: 0x43454e78,
           STATIONARY= "false",
           NEW_ALIGNMENT= "false",
           sprite_pos_copy= table: 0x43455778,
           hover= "function: 0x43456270",
           RETS= table: 0x43454618,
           zoom= "true",
           stop_hover= "function: 0x434562f8",
           sprite= "Quad: 0x018a0f314a20",
           juice= table: 0x4c2ff328,
           container= table: 0x4eb18e70,
           layered_parallax= table: 0x434556b8,
           FRAME= table: 0x43454a98,
           created_on_pause= "true",
           shadow_height= 0.2,
           image_dims= table: 0x43455e10,
           states= table: 0x43454af8,
           VT= table: 0x43454e78,
           scale_mag= 40,
           hover_offset= table: 0x434548b0,
           pinch= table: 0x43455598,
           static_rotation= "false",
           last_moved= -1,
         },
        ability_UIBox_table= table: 0x4c2ff4a8         {
           badges= table: 0x4c2ff5b0,
           info= table: 0x4c2ff560,
           main= table: 0x4c2ff538,
           card_type= "Other",
           name= table: 0x4c2ffb58,
           type= table: 0x4c2ff588,
         },
        hover_tilt= 3,
        original_T= table: 0x43454d88         {
           x= 0,
           w= 0.8,
           y= 0,
           h= 0.8,
           r= 0,
           scale= 1,
         },
        shadow_parrallax= table: 0x43455658         {
           y= -1.5,
           x= -0.6345,
         },
        ARGS= table: 0x434545b8         {
           prep_shader= table: 0x4f9d3b28,
           collides_with_point_rotation= table: 0x4486df28,
           collides_with_point_translation= table: 0x4486df00,
           set_offset_translation= table: 0x40eaa1e0,
           set_offset_point= table: 0x40eaa0f0,
           collides_with_point_point= table: 0x4486ded8,
         },
        ID= 451056,
        atlas= table: 0x3b20e490         {
           name= "akyrs_modicon",
           prefix_config= table: 0x3b20e4b8,
           key= "akyrs_modicon",
           original_mod= table: 0x3acdea30,
           _saved_d_u= "true",
           original_key= "modicon",
           px= 32,
           image_data= "ImageData: 0x018a13f207b0",
           mod= table: 0x3acdea30,
           image= "Image: 0x018a21788bd0",
           registered= "true",
           py= 32,
           path= "aikoyoriModIcon.png",
           atlas= "Atlas",
           full_path= "C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/assets/2x/aikoyoriModIcon.png",
         },
        config= table: 0x43454640         {
           refresh_movement= "true",
           h_popup= table: 0x4f59e760,
           h_popup_config= table: 0x3f7e17b8,
         },
        velocity= table: 0x43454f68         {
           x= 0,
           mag= 0,
           y= 0,
           r= 0,
           scale= -0.0030493076174419,
         },
        scale= table: 0x43455718         {
           y= 32,
           x= 32,
         },
        temp_offs= table: 0x460d2698         {
           y= 29.6565,
           x= 45.37,
         },
        alignment= table: 0x434554b0         {
           prev_type= "a",
           offset= table: 0x434554d8,
           type= "a",
           type_list= table: 0x45ac8e50,
           prev_offset= table: 0x43455538,
         },
        hovering= "true",
        under_overlay= "false",
        draw_steps= table: 0x434561d8         {
           [1] = table: 0x43456200,
           [2] = table: 0x43456248,
         },
        CALCING= "true",
        CT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        STATIONARY= "false",
        NEW_ALIGNMENT= "false",
        sprite_pos_copy= table: 0x43455778         {
           y= 0,
           x= 0,
         },
        hover= "function: 0x43456270",
        RETS= table: 0x43454618         {
           get_pos_pixel= table: 0x49287068,
         },
        zoom= "true",
        stop_hover= "function: 0x434562f8",
        sprite= "Quad: 0x018a0f314a20",
        juice= table: 0x4c2ff328         {
           start_time= 23.215424911356,
           scale= 0,
           r_amt= 0.02,
           r= 0,
           end_time= 23.615424911356,
           scale_amt= 0.05,
         },
        container= table: 0x4eb18e70         {
           jiggle= 0,
           click_offset= table: 0x4eb19500,
           under_overlay= "false",
           children= table: 0x4eb19b28,
           FRAME= table: 0x4eb18f10,
           ARGS= table: 0x4eb18e98,
           hover_offset= table: 0x4eb19528,
           T= table: 0x4eb19188,
           CT= table: 0x4eb19188,
           RETS= table: 0x4eb18ec0,
           ID= 450652,
           states= table: 0x4eb19120,
           created_on_pause= "false",
           container= table: 0x4eb18e70,
           config= table: 0x4eb18ee8,
         },
        layered_parallax= table: 0x434556b8         {
           y= 0,
           x= 0,
         },
        FRAME= table: 0x43454a98         {
           MOVE= 178300,
           DRAW= -1,
         },
        created_on_pause= "true",
        shadow_height= 0.2,
        image_dims= table: 0x43455e10         {
           [1] = 34,
           [2] = 34,
         },
        states= table: 0x43454af8         {
           drag= table: 0x43454ca0,
           collide= table: 0x43454b20,
           release_on= table: 0x43454d00,
           visible= "true",
           hover= table: 0x43454be0,
           click= table: 0x43454c40,
           focus= table: 0x43454b80,
         },
        VT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        scale_mag= 40,
        hover_offset= table: 0x434548b0         {
           y= 0.46711111111111,
           x= 0.04333333333333,
         },
        pinch= table: 0x43455598         {
           y= "false",
           x= "false",
         },
        static_rotation= "false",
        last_moved= -1,
      },
   },
}
INFO - [G] Could not find key for center: {
  refresh_movement= "true",
  h_popup= table: 0x4f59e760   {
     nodes= table: 0x4f59e850      {
        [1] = table: 0x4f59e890         {
           nodes= table: 0x43a443d0,
           n= 3,
           config= table: 0x4f59e920,
         },
      },
     n= 7,
     config= table: 0x4f59e7f0      {
        colour= table: 0x3a4a2268         {
           [1] = 0,
           [2] = 0,
           [3] = 0,
           [4] = 0,
         },
        align= "cm",
        outline_colour= table: 0x3a437cb8         {
           [1] = 0.84705882352941,
           [2] = 0.84705882352941,
           [3] = 0.84705882352941,
           [4] = 1,
         },
      },
   },
  h_popup_config= table: 0x3f7e17b8   {
     offset= table: 0x3f7e1848      {
        y= 0,
        x= -0.1,
      },
     align= "cl",
     instance_type= "POPUP",
     parent= table: 0x434544e0      {
        float= "true",
        click_offset= table: 0x43454888         {
           y= 0,
           x= 0,
         },
        children= table: 0x43454d60         {
         },
        parent= table: 0x3d606230         {
           click_offset= table: 0x404f9378,
           children= table: 0x3d606258,
           parent= table: 0x3d606090,
           T= table: 0x404f9100,
           offset= table: 0x404fa078,
           role= table: 0x404fa2e8,
           last_aligned= -1,
           content_dimensions= table: 0x3d606370,
           Mid= table: 0x3d606230,
           VT= table: 0x404f9b98,
           shadow_parrallax= table: 0x404fa0d8,
           ARGS= table: 0x3d606348,
           ID= 451132,
           container= table: 0x4eb18e70,
           config= table: 0x43455fe8,
           velocity= table: 0x404f9c88,
           temp_offs= table: 0x45ac8b70,
           UIT= 5,
           alignment= table: 0x404f9ec8,
           created_on_pause= "true",
           STATIONARY= "true",
           NEW_ALIGNMENT= "false",
           CALCING= "true",
           under_overlay= "false",
           layered_parallax= table: 0x404fa138,
           FRAME= table: 0x404f9438,
           UIBox= table: 0x3ebcbac0,
           shadow_height= 0.2,
           hover_offset= table: 0x404f93d8,
           CT= table: 0x404f9100,
           RETS= table: 0x404f90d8,
           states= table: 0x404f9498,
           original_T= table: 0x404f9a08,
           pinch= table: 0x404fa018,
           last_moved= -1,
           static_rotation= "true",
         },
        sprite_pos= table: 0x43454458         {
           y= 0,
           x= 0,
         },
        T= table: 0x434546d0         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 1,
           r= 0,
         },
        offset= table: 0x434555f8         {
           y= 0,
           x= 0,
         },
        role= table: 0x404fa4c8         {
           xy_bond= "Strong",
           offset= table: 0x43455148,
           scale_bond= "Weak",
           major= table: 0x3d606230,
           draw_major= table: 0x434544e0,
           wh_bond= "Weak",
           r_bond= "Strong",
           role_type= "Minor",
         },
        last_aligned= -1,
        Mid= table: 0x434544e0         {
           float= "true",
           click_offset= table: 0x43454888,
           children= table: 0x43454d60,
           parent= table: 0x3d606230,
           sprite_pos= table: 0x43454458,
           T= table: 0x434546d0,
           offset= table: 0x434555f8,
           role= table: 0x404fa4c8,
           last_aligned= -1,
           Mid= table: 0x434544e0,
           ability_UIBox_table= table: 0x4c2ff4a8,
           hover_tilt= 3,
           original_T= table: 0x43454d88,
           shadow_parrallax= table: 0x43455658,
           ARGS= table: 0x434545b8,
           ID= 451056,
           atlas= table: 0x3b20e490,
           config= table: 0x43454640,
           velocity= table: 0x43454f68,
           scale= table: 0x43455718,
           temp_offs= table: 0x460d2698,
           alignment= table: 0x434554b0,
           hovering= "true",
           under_overlay= "false",
           draw_steps= table: 0x434561d8,
           CALCING= "true",
           CT= table: 0x43454e78,
           STATIONARY= "false",
           NEW_ALIGNMENT= "false",
           sprite_pos_copy= table: 0x43455778,
           hover= "function: 0x43456270",
           RETS= table: 0x43454618,
           zoom= "true",
           stop_hover= "function: 0x434562f8",
           sprite= "Quad: 0x018a0f314a20",
           juice= table: 0x4c2ff328,
           container= table: 0x4eb18e70,
           layered_parallax= table: 0x434556b8,
           FRAME= table: 0x43454a98,
           created_on_pause= "true",
           shadow_height= 0.2,
           image_dims= table: 0x43455e10,
           states= table: 0x43454af8,
           VT= table: 0x43454e78,
           scale_mag= 40,
           hover_offset= table: 0x434548b0,
           pinch= table: 0x43455598,
           static_rotation= "false",
           last_moved= -1,
         },
        ability_UIBox_table= table: 0x4c2ff4a8         {
           badges= table: 0x4c2ff5b0,
           info= table: 0x4c2ff560,
           main= table: 0x4c2ff538,
           card_type= "Other",
           name= table: 0x4c2ffb58,
           type= table: 0x4c2ff588,
         },
        hover_tilt= 3,
        original_T= table: 0x43454d88         {
           x= 0,
           w= 0.8,
           y= 0,
           h= 0.8,
           r= 0,
           scale= 1,
         },
        shadow_parrallax= table: 0x43455658         {
           y= -1.5,
           x= -0.6345,
         },
        ARGS= table: 0x434545b8         {
           prep_shader= table: 0x4f9d3b28,
           collides_with_point_rotation= table: 0x4486df28,
           collides_with_point_translation= table: 0x4486df00,
           set_offset_translation= table: 0x40eaa1e0,
           set_offset_point= table: 0x40eaa0f0,
           collides_with_point_point= table: 0x4486ded8,
         },
        ID= 451056,
        atlas= table: 0x3b20e490         {
           name= "akyrs_modicon",
           prefix_config= table: 0x3b20e4b8,
           key= "akyrs_modicon",
           original_mod= table: 0x3acdea30,
           _saved_d_u= "true",
           original_key= "modicon",
           px= 32,
           image_data= "ImageData: 0x018a13f207b0",
           mod= table: 0x3acdea30,
           image= "Image: 0x018a21788bd0",
           registered= "true",
           py= 32,
           path= "aikoyoriModIcon.png",
           atlas= "Atlas",
           full_path= "C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/assets/2x/aikoyoriModIcon.png",
         },
        config= table: 0x43454640         {
           refresh_movement= "true",
           h_popup= table: 0x4f59e760,
           h_popup_config= table: 0x3f7e17b8,
         },
        velocity= table: 0x43454f68         {
           x= 0,
           mag= 0,
           y= 0,
           r= 0,
           scale= -0.0030493076174419,
         },
        scale= table: 0x43455718         {
           y= 32,
           x= 32,
         },
        temp_offs= table: 0x460d2698         {
           y= 29.6565,
           x= 45.37,
         },
        alignment= table: 0x434554b0         {
           prev_type= "a",
           offset= table: 0x434554d8,
           type= "a",
           type_list= table: 0x45ac8e50,
           prev_offset= table: 0x43455538,
         },
        hovering= "true",
        under_overlay= "false",
        draw_steps= table: 0x434561d8         {
           [1] = table: 0x43456200,
           [2] = table: 0x43456248,
         },
        CALCING= "true",
        CT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        STATIONARY= "false",
        NEW_ALIGNMENT= "false",
        sprite_pos_copy= table: 0x43455778         {
           y= 0,
           x= 0,
         },
        hover= "function: 0x43456270",
        RETS= table: 0x43454618         {
           get_pos_pixel= table: 0x49287068,
         },
        zoom= "true",
        stop_hover= "function: 0x434562f8",
        sprite= "Quad: 0x018a0f314a20",
        juice= table: 0x4c2ff328         {
           start_time= 23.215424911356,
           scale= 0,
           r_amt= 0.02,
           r= 0,
           end_time= 23.615424911356,
           scale_amt= 0.05,
         },
        container= table: 0x4eb18e70         {
           jiggle= 0,
           click_offset= table: 0x4eb19500,
           under_overlay= "false",
           children= table: 0x4eb19b28,
           FRAME= table: 0x4eb18f10,
           ARGS= table: 0x4eb18e98,
           hover_offset= table: 0x4eb19528,
           T= table: 0x4eb19188,
           CT= table: 0x4eb19188,
           RETS= table: 0x4eb18ec0,
           ID= 450652,
           states= table: 0x4eb19120,
           created_on_pause= "false",
           container= table: 0x4eb18e70,
           config= table: 0x4eb18ee8,
         },
        layered_parallax= table: 0x434556b8         {
           y= 0,
           x= 0,
         },
        FRAME= table: 0x43454a98         {
           MOVE= 178300,
           DRAW= -1,
         },
        created_on_pause= "true",
        shadow_height= 0.2,
        image_dims= table: 0x43455e10         {
           [1] = 34,
           [2] = 34,
         },
        states= table: 0x43454af8         {
           drag= table: 0x43454ca0,
           collide= table: 0x43454b20,
           release_on= table: 0x43454d00,
           visible= "true",
           hover= table: 0x43454be0,
           click= table: 0x43454c40,
           focus= table: 0x43454b80,
         },
        VT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        scale_mag= 40,
        hover_offset= table: 0x434548b0         {
           y= 0.46711111111111,
           x= 0.04333333333333,
         },
        pinch= table: 0x43455598         {
           y= "false",
           x= "false",
         },
        static_rotation= "false",
        last_moved= -1,
      },
     major= table: 0x434544e0      {
        float= "true",
        click_offset= table: 0x43454888         {
           y= 0,
           x= 0,
         },
        children= table: 0x43454d60         {
         },
        parent= table: 0x3d606230         {
           click_offset= table: 0x404f9378,
           children= table: 0x3d606258,
           parent= table: 0x3d606090,
           T= table: 0x404f9100,
           offset= table: 0x404fa078,
           role= table: 0x404fa2e8,
           last_aligned= -1,
           content_dimensions= table: 0x3d606370,
           Mid= table: 0x3d606230,
           VT= table: 0x404f9b98,
           shadow_parrallax= table: 0x404fa0d8,
           ARGS= table: 0x3d606348,
           ID= 451132,
           container= table: 0x4eb18e70,
           config= table: 0x43455fe8,
           velocity= table: 0x404f9c88,
           temp_offs= table: 0x45ac8b70,
           UIT= 5,
           alignment= table: 0x404f9ec8,
           created_on_pause= "true",
           STATIONARY= "true",
           NEW_ALIGNMENT= "false",
           CALCING= "true",
           under_overlay= "false",
           layered_parallax= table: 0x404fa138,
           FRAME= table: 0x404f9438,
           UIBox= table: 0x3ebcbac0,
           shadow_height= 0.2,
           hover_offset= table: 0x404f93d8,
           CT= table: 0x404f9100,
           RETS= table: 0x404f90d8,
           states= table: 0x404f9498,
           original_T= table: 0x404f9a08,
           pinch= table: 0x404fa018,
           last_moved= -1,
           static_rotation= "true",
         },
        sprite_pos= table: 0x43454458         {
           y= 0,
           x= 0,
         },
        T= table: 0x434546d0         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 1,
           r= 0,
         },
        offset= table: 0x434555f8         {
           y= 0,
           x= 0,
         },
        role= table: 0x404fa4c8         {
           xy_bond= "Strong",
           offset= table: 0x43455148,
           scale_bond= "Weak",
           major= table: 0x3d606230,
           draw_major= table: 0x434544e0,
           wh_bond= "Weak",
           r_bond= "Strong",
           role_type= "Minor",
         },
        last_aligned= -1,
        Mid= table: 0x434544e0         {
           float= "true",
           click_offset= table: 0x43454888,
           children= table: 0x43454d60,
           parent= table: 0x3d606230,
           sprite_pos= table: 0x43454458,
           T= table: 0x434546d0,
           offset= table: 0x434555f8,
           role= table: 0x404fa4c8,
           last_aligned= -1,
           Mid= table: 0x434544e0,
           ability_UIBox_table= table: 0x4c2ff4a8,
           hover_tilt= 3,
           original_T= table: 0x43454d88,
           shadow_parrallax= table: 0x43455658,
           ARGS= table: 0x434545b8,
           ID= 451056,
           atlas= table: 0x3b20e490,
           config= table: 0x43454640,
           velocity= table: 0x43454f68,
           scale= table: 0x43455718,
           temp_offs= table: 0x460d2698,
           alignment= table: 0x434554b0,
           hovering= "true",
           under_overlay= "false",
           draw_steps= table: 0x434561d8,
           CALCING= "true",
           CT= table: 0x43454e78,
           STATIONARY= "false",
           NEW_ALIGNMENT= "false",
           sprite_pos_copy= table: 0x43455778,
           hover= "function: 0x43456270",
           RETS= table: 0x43454618,
           zoom= "true",
           stop_hover= "function: 0x434562f8",
           sprite= "Quad: 0x018a0f314a20",
           juice= table: 0x4c2ff328,
           container= table: 0x4eb18e70,
           layered_parallax= table: 0x434556b8,
           FRAME= table: 0x43454a98,
           created_on_pause= "true",
           shadow_height= 0.2,
           image_dims= table: 0x43455e10,
           states= table: 0x43454af8,
           VT= table: 0x43454e78,
           scale_mag= 40,
           hover_offset= table: 0x434548b0,
           pinch= table: 0x43455598,
           static_rotation= "false",
           last_moved= -1,
         },
        ability_UIBox_table= table: 0x4c2ff4a8         {
           badges= table: 0x4c2ff5b0,
           info= table: 0x4c2ff560,
           main= table: 0x4c2ff538,
           card_type= "Other",
           name= table: 0x4c2ffb58,
           type= table: 0x4c2ff588,
         },
        hover_tilt= 3,
        original_T= table: 0x43454d88         {
           x= 0,
           w= 0.8,
           y= 0,
           h= 0.8,
           r= 0,
           scale= 1,
         },
        shadow_parrallax= table: 0x43455658         {
           y= -1.5,
           x= -0.6345,
         },
        ARGS= table: 0x434545b8         {
           prep_shader= table: 0x4f9d3b28,
           collides_with_point_rotation= table: 0x4486df28,
           collides_with_point_translation= table: 0x4486df00,
           set_offset_translation= table: 0x40eaa1e0,
           set_offset_point= table: 0x40eaa0f0,
           collides_with_point_point= table: 0x4486ded8,
         },
        ID= 451056,
        atlas= table: 0x3b20e490         {
           name= "akyrs_modicon",
           prefix_config= table: 0x3b20e4b8,
           key= "akyrs_modicon",
           original_mod= table: 0x3acdea30,
           _saved_d_u= "true",
           original_key= "modicon",
           px= 32,
           image_data= "ImageData: 0x018a13f207b0",
           mod= table: 0x3acdea30,
           image= "Image: 0x018a21788bd0",
           registered= "true",
           py= 32,
           path= "aikoyoriModIcon.png",
           atlas= "Atlas",
           full_path= "C:\Users\erikk\AppData\Roaming\Balatro\Mods/Balatro-Aikoyoris-Shenanigans-main/assets/2x/aikoyoriModIcon.png",
         },
        config= table: 0x43454640         {
           refresh_movement= "true",
           h_popup= table: 0x4f59e760,
           h_popup_config= table: 0x3f7e17b8,
         },
        velocity= table: 0x43454f68         {
           x= 0,
           mag= 0,
           y= 0,
           r= 0,
           scale= -0.0030493076174419,
         },
        scale= table: 0x43455718         {
           y= 32,
           x= 32,
         },
        temp_offs= table: 0x460d2698         {
           y= 29.6565,
           x= 45.37,
         },
        alignment= table: 0x434554b0         {
           prev_type= "a",
           offset= table: 0x434554d8,
           type= "a",
           type_list= table: 0x45ac8e50,
           prev_offset= table: 0x43455538,
         },
        hovering= "true",
        under_overlay= "false",
        draw_steps= table: 0x434561d8         {
           [1] = table: 0x43456200,
           [2] = table: 0x43456248,
         },
        CALCING= "true",
        CT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        STATIONARY= "false",
        NEW_ALIGNMENT= "false",
        sprite_pos_copy= table: 0x43455778         {
           y= 0,
           x= 0,
         },
        hover= "function: 0x43456270",
        RETS= table: 0x43454618         {
           get_pos_pixel= table: 0x49287068,
         },
        zoom= "true",
        stop_hover= "function: 0x434562f8",
        sprite= "Quad: 0x018a0f314a20",
        juice= table: 0x4c2ff328         {
           start_time= 23.215424911356,
           scale= 0,
           r_amt= 0.02,
           r= 0,
           end_time= 23.615424911356,
           scale_amt= 0.05,
         },
        container= table: 0x4eb18e70         {
           jiggle= 0,
           click_offset= table: 0x4eb19500,
           under_overlay= "false",
           children= table: 0x4eb19b28,
           FRAME= table: 0x4eb18f10,
           ARGS= table: 0x4eb18e98,
           hover_offset= table: 0x4eb19528,
           T= table: 0x4eb19188,
           CT= table: 0x4eb19188,
           RETS= table: 0x4eb18ec0,
           ID= 450652,
           states= table: 0x4eb19120,
           created_on_pause= "false",
           container= table: 0x4eb18e70,
           config= table: 0x4eb18ee8,
         },
        layered_parallax= table: 0x434556b8         {
           y= 0,
           x= 0,
         },
        FRAME= table: 0x43454a98         {
           MOVE= 178300,
           DRAW= -1,
         },
        created_on_pause= "true",
        shadow_height= 0.2,
        image_dims= table: 0x43455e10         {
           [1] = 34,
           [2] = 34,
         },
        states= table: 0x43454af8         {
           drag= table: 0x43454ca0,
           collide= table: 0x43454b20,
           release_on= table: 0x43454d00,
           visible= "true",
           hover= table: 0x43454be0,
           click= table: 0x43454c40,
           focus= table: 0x43454b80,
         },
        VT= table: 0x43454e78         {
           x= 5.37,
           w= 0.8,
           y= 6.6565,
           h= 0.8,
           scale= 0.97,
           r= 0.0055102536156143,
         },
        scale_mag= 40,
        hover_offset= table: 0x434548b0         {
           y= 0.46711111111111,
           x= 0.04333333333333,
         },
        pinch= table: 0x43455598         {
           y= "false",
           x= "false",
         },
        static_rotation= "false",
        last_moved= -1,
      },
   },
}
INFO - [♥] Applied 1 patch to '=[SMODS _ "smods-https-thread.lua"]'
INFO - [G] 2025-05-03 15:23:45 :: DEBUG :: SMODS.https(45) :: Using https module backend
